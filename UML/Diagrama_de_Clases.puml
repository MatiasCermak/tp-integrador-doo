.@startuml Clases

interface Vista{
    
    + setControlador(Controlador cont)
}

interface Controlador{
    + eventListener()
}

interface Modelo{
}

interface MVCFactory{
    +crearVista() : Vista
    +crearModelo() : Modelo
    +crearControlador() : Controlador
}

class MVCFactoryConsultarClientes{
    +crearVista() : Vista
    +crearModelo() : Modelo
    +crearControlador() : Controlador
}

class MVCFactoryConfirmarTurnos{
    +crearVista() : Vista
    +crearModelo() : Modelo
    +crearControlador() : Controlador
}

class MVCFactoryRegistrarClientes{
    +crearVista() : Vista
    +crearModelo() : Modelo
    +crearControlador() : Controlador
}

class MVCFactoryRegistrarVehiculos{
    +crearVista() : Vista
    +crearModelo() : Modelo
    +crearControlador() : Controlador
}

class MVCFactoryRegistrarTurnos{
    +crearVista() : Vista
    +crearModelo() : Modelo
    +crearControlador() : Controlador
}

class MVCFactoryCrearFichas{
    +crearVista() : Vista
    +crearModelo(int tipo) : Modelo
    +crearControlador() : Controlador
}

class MVCFactorySeleccionarMateriales{
    +crearVista() : Vista
    +crearModelo() : Modelo
    +crearControlador() : Controlador
}

interface ClientesDAO{ 
}

interface TurnosDAO{
}

interface VehiculoDAO{
}

interface MaterialDAO{
}

interface MecánicoDAO{
}

interface AgendaDAO{
}

interface FichaDAO{
}

interface DetalleDAO{
}

interface CompañíaSegurosDAO{
}

interface FacturaDAO{
}

class MTurnos{
    - turno: TurnoDAO
}

class MCliente{
    - cliente: ClienteDAO
}

class MVehiculo{
    - vehiculo: VehiculoDAO
}

class MMaterial{
    - material: MaterialDAO
}

class MFicha{
    - ficha: FichaDao
}

class MMecánico{
    - mecánico: MecanicoDAO
}

class MAgenda{
    - agenda: AgendaDAO
}

class MDetalle{
    - detalle: DetalleDAO
}

class MCompañíaSeguros{
    - compañíaseguros: CompañíaSegurosDAO
}

class VistaConsultaCliente{
    - List<ClienteDTO> clientes
    - JTable tablaClientes
    - JButton nuevo
    - JButton seleccionar 
    - JButton cancelar


    + getClientes() : List<ClienteDTO> clientes
    + setClientes(List<ClienteDTO> clientes)
    + actualizarVista(List<ClienteDTO> clientes)
}

class VistaConfirmarTurnos{
    - JTable tablaTurnos
    - JButton confirmar
    - JButton cancelarTurno
    - JButton cancelarAccion
    - JLabel confAsist

    + getTurnos() : List<TurnosDTO> turnos
    + setTurnos(List<TurnosDTO> turnos)
    + actualizarVista(List<TurnosDTO> turnos)
}

class VistaRegistrarClientes{
    - JButton siguiente
    - JButton cancelar
    - JLabel labelnombre
    - JLabel labelapellido
    - JLabel labeldni
    - JLabel labeltipo
    - JTextField textnombre
    - JTextField textapellido
    - JTextField textdni
    - JComboBox comboboxtipo

    + actualizarVista()
}

class VistaRegistrarVehiculos{
    - JButton registrar
    - JButton cancelar
    - JLabel labelmatricula
    - JLabel labelnropoliza
    - JLabel labelmodelo
    - JLabel labelmarca
    - JLabel labelcompseg
    - JTextField textmatricula
    - JTextField textnropoliza
    - JTextField textmodelo
    - JComboBox comboboxcompseg
    - JComboBox comboboxmarca

    + actualizarVista()
}

class VistaRegistrarTurnos{
    - JButton registrar
    - JButton cancelar
    - JButton examinar
    - JButton nuevo
    - JButton calendario
    - JLabel labelcliente
    - JLabel labelvehiculo
    - JLabel labelespecialidad
    - JLabel labelfecha
    - JLabel labelmecanico
    - JTextField textcliente
    - JTextField textfecha
    - JComboBox comboboxvehiculo
    - JComboBox comboboxmecanico

    + actualizarVista()
}

class VistaCrearFichas{
    - JButton examinar
    - JButton anadirmat
    - JTextField textturno
    - JList listactividades
    - JTable materiales

    + actualizarVista()
}

class VistaSeleccionarMateriales{
    - JTable tablaMateriales
    - JButton confirmar
    - JButton cancelarAccion
    - JLabel selecMat

    + getMateriales() : List<MaterialesDTO> materiales
    + setMateriales(List<MaterialesDTO> materiales)
    + actualizarVista(List<MaterialesDTO> materiales)
}

class ControladorClientes{
    - modeloCliente: MCliente
    - modeloVehiculo: MVehiculo

    + ControladorClientes(Modelo modelocliente, Modelo modelovehiculo, Vista vista)
    + getClientes(): List<ClienteDTO>
    + addCliente(ClienteDTO cliente)
    + filterClientes(string params) : List<ClienteDTO>
}

class ClientesDAOImpl{
    + getClientes(string filtros): List<ClienteDTO>
    + insertCliente(ClienteDTO cliente)
    + deleteCliente(ClienteDTO cliente)
    + updateCliente(ClienteDTO cliente)
}

class TurnosDAOImpl{
    + getTurnos(string filtros): List<TurnoDTO>
    + insertTurno(TurnoDTO turno)
    + deleteTurno(TurnoDTO turno)
    + updateTurno(TurnoDTO turno)
}

class VehiculoDAOImpl{
    + getVehiculos(ClienteDTO cliente): List<VehiculoDTO>
    + insertVehiculo(VehiculoDTO vehiculo)
    + deleteVehiculo(VehiculoDTO vehiculo)
    + updateVehiculo(VehiculoDTO vehiculo)
}

class MaterialDAOImpl{
    + getMaterial(): List<MaterialDTO>
    + insertMaterial(MaterialDTO material)
    + deleteMaterial(MaterialDTO material)
    + updateMaterial(MaterialDTO material)
}

class MecánicoDAOImpl{
    + getMecánico(): List<MecánicoDTO>
    + insertMecánico(MecánicoDTO mecánico)
    + deleteMecánico(MecánicoDTO mecánico)
    + updateMecánico(MecánicoDTO mecánico)
}

class AgendaDAOImpl{
    + getAgenda(): List<AgendaDTO>
    + insertAgenda(AgendaDTO agenda)
    + deleteAgenda(AgendaDTO agenda)
    + updateAgenda(AgendaDTO agenda)
}

class DetalleDAOImpl{
    + getDetalle(): List<DetalleDTO>
    + insertDetalle(DetalleDTO detalle)
    + deleteDetalle(DetalleDTO detalle)
    + updateDetalle(DetalleDTO detalle)
}

class FichaDAOImpl{
    + getFicha(): List<FichaDTO>
    + insertFicha(FichaDTO ficha)
    + deleteFicha(FichaDTO ficha)
    + updateFicha(FichaDTO ficha)
}

class CompañíaSegurosDAOImpl{
    + getCompañíaSeguros(): List<CompañíaSegurosDTO>
    + insertCompañíaSeguros(CompañíaSegurosDTO compañíaSeguros)
    + deleteCompañíaSeguros(CompañíaSegurosDTO compañíaSeguros)
    + updateCompañíaSeguros(CompañíaSegurosDTO compañíaSeguros)
}


class CompañíaSegurosDTO {
	- nombre: String
    
    + CompañíaSegurosDTO(String)
    + setNombre(String)
    + getNombre(): String
}

class TurnoDTO{
    - cliente: ClienteDTO
    - vehiculo: VehiculoDTO
    - fecha: Date
    - hora: int
    - estado: bool
    - asistencia: int

    + TurnoDTO(Date fecha,int hora)
    + setCliente(ClienteDTO)
    + setVehiculo(VehiculoDTO)
    + setEstado(bool)
    + setAsistencia(int)
    + getFecha(): Date
    + getHora(): int
    + getEstado(): bool
    + getAsistencia(): int
    + getCliente(): ClienteDTO
    + getVehiculo(): VehiculoDTO
}
note right of TurnoDTO : El atributo estado indica turno libre u ocupado

class DetalleDTO{
    - material: Material
    - cantidad: int

    + DetalleDTO(Material material, int cantidad)
    + getSubtotal(): int
    + getMaterial(): Material
    + getCantidad(): int
}

class AgendaDTO{
    - horaInicio: int
    - horaFin: int
    - turnos: List<Turno>

    + AgendaDTO()
    + Inicializar()
    + setHoraI(int)
    + setHoraF(int)
    + getTurnos(): List<Turno>
    + getRangoHorario(): int, int
    + agendarTurno(Turno turno)
    + registrarAsistencia(Turno turno)
}

class Persona{
    # nombre: String
    # apellido: String
    # dniTipo: String
    # dniNumero: int

    + Persona()
    + Persona(String nombre, String apellido, 
        String dniTipo, int dniNum)
    + getNombre(): String
    + getApellido(): String
    + getDNITipo(): String
    + getDNINum(): int
    + setNombreCompleto(String nombre, String apellido)
    + setDNI(String tipo, int numero)
}

class MecánicoDTO{
    - especialidad: String
    - costoHora: float
    - agenda: AgendaDTO

    + MecánicoDTO(String nombre, String apellido, 
        String dniTipo, int dniNum, String, rol, Float salario)
    + setEspecialidad(String especialidad)
    + setCosto(float costoHora)
    + inicializarAgenda()
    + getAgenda(): AgendaDTO
    + getCosto(): float
    + getEspecialidad(): String
}

class MaterialDTO{
    - nombre: String
    - tipo: String
    - precio: float
    - medida: String

    + MaterialDTO(String nombre, float precio, 
        String tipo, String medida)
    + setNombre(String nombre)
    + setPrecio(float precio)
    + getNombre(): String
    + getPrecio(): float
    + setMedida(String medida)
    + getMedida(): string
    + setTipo(String)
    + getTipo(): String
}
note right of MaterialDTO : Esta clase se utiliza tanto para insumos y repuestos

class FacturaDTO{
    - NCseguro: CompañíaSegurosDTO
    - listaServicios: List<String>
    - costoTotal: float
    - pagoRealizado: float

    + Factura(CompañíaSegurosDTO NCseguro, List<String> listaServicios, 
            float costoTotal, float pagoRealizado)
    + getNCseguro() : CompañíaSegurosDTO
    + getServicios(): List<string>
    + getCostoTotal() : float
    + getPagoRealizado() : float
    + setListaServicios(List<String> listaServicios)
    + setDeuda(float costoTotal, float pagoRealizado)
}

class FichaDTO{
    - listaDetalles: List<Detalle>
    - listaActividades: List<String>
    - turno: Turno
    - conformidad: bool
    - motConformidad: String
    - etapa: String

    + FichaDTO(List<Detalle> listaDetalles, List<String> listaActividades, 
            Turno turno, Cliente cliente, VehiculoDTO vehiculo, bool conformidad,String motConformidad)
    + getListaDetalles(): List<Detalles>
    + getListaActividades(): List<String>
    + getTurno(): Turno
    + getConformidad(): bool
    + getMotivos(): String

    + addDetalle(Detalle detalle)
    + setListaActividades(List<String> listaActividades)
    + addActividad(String actividad)
    + setConformidad(bool Conformidad, String motConformidad)
    + setEtapa(String etapa)
}
note left of FichaDTO : motConformidad hace referencia al motivo de la no conformidad del cliente con el servicio

class VehiculoDTO{
    - seguro: CompañíaSegurosDTO
    - NPoliza: int
    - marca: String
    - modelo: String
    - matricula: String

    + VehiculoDTO(CompañíaSegurosDTO seguro, int NPoliza, String marca,
            String modelo, String matricula)
    + getNPoliza(): int
    + getMarca(): String
    + getModelo(): String
    + getMatricula(): String
    + setDatos(CompañíaSegurosDTO seguro, String marca,
            String modelo, String matricula)  
}

class ClienteDTO{
    - listaVehiculos: List<VehiculoDTO>

    + Cliente(String nombre, String apellido, 
        String dniTipo, int dniNum, List<VehiculoDTO> listaVehiculos)
    + getListaVehiculos(): Lista<VehiculoDTO>
    + agregarVehiculo(VehiculoDTO vehiculo)
    + getVehiculo(String matricula): VehiculoDTO
}

class Empleado{
    - rol: String
    - salario: float

    + Empleado(String nombre, String apellido, 
        String dniTipo, int dniNum, String, rol, Float salario)
    + getRol(): String
    + getSalario(): float
    + setDatosEmp(String rol, float Salario)
}

Empleado --|> Persona
ClienteDTO -up-|> Persona
MecánicoDTO -up-|> Empleado
ClienteDTO "1" --> "0-n" TurnoDTO
MaterialDTO "1" --> "0-n" DetalleDAO
TurnoDTO "1-n" ---> "1" AgendaDTO
AgendaDTO "1" --> "1" MecánicoDTO
DetalleDAO "1-n" --* "1" FichaDTO
MecánicoDTO "1" --> "1" FichaDTO
TurnoDTO "1" --> "1" FichaDTO
CompañíaSegurosDTO "1" --> "0-n" VehiculoDTO
CompañíaSegurosDTO "1" --> "0-n" FacturaDTO
VehiculoDTO "0-n" --> "1" ClienteDTO


VistaConsultaCliente <- ControladorClientes
MCliente <- ControladorClientes
MVehiculo <- ControladorClientes 
VistaConsultaCliente --|> Vista
ControladorClientes --|> Controlador

MCliente --|> Modelo
MCliente -> ClientesDAOImpl
ClientesDAOImpl -|> ClientesDAO
ClienteDTO <.. ClientesDAOImpl : <<instancia>>

MTurnos --|> Modelo
MTurnos --> TurnosDAOImpl
TurnosDAOImpl --|> TurnosDAO
TurnoDTO <.. TurnosDAOImpl : <<instancia>>

MVehiculo --|> Modelo
MVehiculo --> VehiculoDAOImpl
VehiculoDAOImpl --|> VehiculoDAO
VehiculoDTO <.. VehiculoDAOImpl : <<instancia>>

MMaterial --|> Modelo
MMaterial --> MaterialDAOImpl
MaterialDAOImpl --|> MaterialDAO
MaterialDTO <.. MaterialDAOImpl : <<instancia>>

MMecánico --|> Modelo
MMecánico --> MecánicoDAOImpl
MecánicoDAOImpl --|> MecánicoDAO
MecánicoDTO <.. MecánicoDAOImpl : <<instancia>>

MFicha --|> Modelo
MFicha --> FichaDAOImpl
FichaDAOImpl --|> FichaDAO
FichaDTO <.. FichaDAOImpl : <<instancia>>

MAgenda --|> Modelo
MAgenda --> AgendaDAOImpl
AgendaDAOImpl --|> AgendaDAO
AgendaDTO <.. AgendaDAOImpl : <<instancia>>

MFactura --|> Modelo
MFactura --> FacturaDAOImpl
FacturaDAOImpl --|> FacturaDAO
FacturaDTO <.. FacturaDAOImpl : <<instancia>>

MDetalle --|> Modelo
MDetalle --> DetalleDAOImpl
DetalleDAOImpl --|> DetalleDAO
DetalleDTO <.. DetalleDAOImpl : <<instancia>>

MCompañíaSeguros --|> Modelo
MCompañíaSeguros --> CompañíaSegurosDAOImpl
CompañíaSegurosDAOImpl --|> CompañíaSegurosDAO
CompañíaSegurosDTO <.. CompañíaSegurosDAOImpl : <<instancia>>

MVCFactory <|-down- MVCFactoryConsultarClientes
MVCFactory <|-down- MVCFactoryConfirmarTurnos
MVCFactory <|-down- MVCFactoryRegistrarClientes
MVCFactory <|-down- MVCFactoryRegistrarVehiculos
MVCFactory <|-down- MVCFactoryRegistrarTurnos
MVCFactory <|-down- MVCFactoryCrearFichas
MVCFactory <|-down- MVCFactorySeleccionarMateriales

MVCFactoryConsultarClientes <.. VistaConsultaCliente : <<instancia>>
MVCFactoryConsultarClientes <.. MCliente : <<instancia>>
MVCFactoryConsultarClientes <.. ControladorClientes : <<instancia>>

MVCFactoryConfirmarTurnos <.down. VistaConfirmarTurnos : <<instancia>>
MVCFactoryRegistrarVehiculos <.down. VistaRegistrarVehiculos : <<instancia>>
MVCFactoryRegistrarTurnos <.down.. VistaRegistrarTurnos : <<instancia>>
MVCFactoryRegistrarClientes <.down. VistaRegistrarClientes : <<instancia>>
MVCFactoryCrearFichas <.down. VistaCrearFichas : <<instancia>> 
MVCFactorySeleccionarMateriales <.down. VistaSeleccionarMateriales : <<instancia>>

VistaConfirmarTurnos -up-|> Vista
VistaRegistrarVehiculos -up-|> Vista
VistaRegistrarTurnos -up-|> Vista
VistaRegistrarClientes -up-|> Vista
VistaCrearFichas -up-|> Vista
VistaSeleccionarMateriales -up-|> Vista
@enduml