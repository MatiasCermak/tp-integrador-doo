@startuml Clases

package ubp.doo.tp.factory{

    interface MVCFactory{
        +crearVista() : Vista
        +crearModelo() : Modelo
        +crearControlador() : Controlador
    }

    class MVCFactoryConsultarClientes{
        +crearVista() : Vista
        +crearModelo() : Modelo
        +crearControlador() : Controlador
    }

    class MVCFactoryConfirmarTurnos{
        +crearVista() : Vista
        +crearModelo() : Modelo
        +crearControlador() : Controlador
    }

    class MVCFactoryRegistrarClientes{
        +crearVista() : Vista
        +crearModelo() : Modelo
        +crearControlador() : Controlador
    }

    class MVCFactoryRegistrarVehiculos{
        +crearVista() : Vista
        +crearModelo() : Modelo
        +crearControlador() : Controlador
    }

    class MVCFactoryRegistrarTurnos{
        +crearVista() : Vista
        +crearModelo() : Modelo
        +crearControlador() : Controlador
    }

    class MVCFactoryCrearFichas{
        +crearVista() : Vista
        +crearModelo(int tipo) : Modelo
        +crearControlador() : Controlador
    }

    class MVCFactorySeleccionarMateriales{
        +crearVista() : Vista
        +crearModelo(int tipo) : Modelo
        +crearControlador() : Controlador
    }

    class MVCFactoryCrearUsuario{
        +crearVista() : Vista
        +crearModelo() : Modelo
        +crearControlador() : Controlador
    }

    class MVCFactoryEliminarUsuario{
        +crearVista() : Vista
        +crearModelo() : Modelo
        +crearControlador() : Controlador
    }
}

package ubp.doo.tp.DAO{

    interface ClientesDAO{ 
    }

    interface TurnosDAO{
    }

    interface VehiculoDAO{
    }

    interface MaterialDAO{
    }

    interface MecánicoDAO{
    }

    interface AgendaDAO{
    }

    interface FichaDAO{
    }

    interface DetalleDAO{
    }

    interface CompañíaSegurosDAO{
    }

    interface FacturaDAO{
    }

    interface UsuarioDAO{
    }

    interface EspecialidadDAO{
    }

    abstract class FabricaDAO{
        createClienteDAO() : ClientesDAO
        createTurnoDAO() : TurnoDAO
        createVehiculoDAO() : VehiculoDAO
        createMaterialDAO() : MaterialDAO
        createMecánicoDAO() : MecánicoDAO
        createAgendaDAO() : AgendaDAO
        createFichaDAO() : FichaDAO
        createDetalleDAO() : DetalleDAO
        createCompañíaSegurosDAO() : CompañíaSegurosDAO
        createFacturaDAO() : FacturaDAO
        createUsuarioDAO() : UsuarioDAO
        createEspecialidadDAO() : EspecialidadDAO
    }

    class SqlFabricaDAO{
    }

    class ClientesDAOImpl{
    + getClientes(string filtros): List<ClienteDTO>
    + insertCliente(ClienteDTO cliente)
    + deleteCliente(ClienteDTO cliente)
    + updateCliente(ClienteDTO cliente)
    }

    class TurnosDAOImpl{
    + getTurnos(string filtros): List<TurnoDTO>
    + insertTurno(TurnoDTO turno)
    + deleteTurno(TurnoDTO turno)
    + updateTurno(TurnoDTO turno)
    }

    class VehiculoDAOImpl{
    + getVehiculos(ClienteDTO cliente): List<VehiculoDTO>
    + insertVehiculo(VehiculoDTO vehiculo)
    + deleteVehiculo(VehiculoDTO vehiculo)
    + updateVehiculo(VehiculoDTO vehiculo)
    }

    class MaterialDAOImpl{
    + getMaterial(): List<MaterialDTO>
    + insertMaterial(MaterialDTO material)
    + deleteMaterial(MaterialDTO material)
    + updateMaterial(MaterialDTO material)
    }

    class MecánicoDAOImpl{
    + getMecánico(): List<MecánicoDTO>
    + insertMecánico(MecánicoDTO mecánico)
    + deleteMecánico(MecánicoDTO mecánico)
    + updateMecánico(MecánicoDTO mecánico)
    }

    class AgendaDAOImpl{
    + getAgenda(): List<AgendaDTO>
    + insertAgenda(AgendaDTO agenda)
    + deleteAgenda(AgendaDTO agenda)
    + updateAgenda(AgendaDTO agenda)
    }

    class DetalleDAOImpl{
    + getDetalle(): List<DetalleDTO>
    + insertDetalle(DetalleDTO detalle)
    + deleteDetalle(DetalleDTO detalle)
    + updateDetalle(DetalleDTO detalle)
    }

    class FichaDAOImpl{
    + getFicha(): List<FichaDTO>
    + insertFicha(FichaDTO ficha)
    + deleteFicha(FichaDTO ficha)
    + updateFicha(FichaDTO ficha)
    }

    class CompañíaSegurosDAOImpl{
    + getCompañíaSeguros(): List<CompañíaSegurosDTO>
    + insertCompañíaSeguros(CompañíaSegurosDTO compañíaSeguros)
    + deleteCompañíaSeguros(CompañíaSegurosDTO compañíaSeguros)
    + updateCompañíaSeguros(CompañíaSegurosDTO compañíaSeguros)
    }

    class FacturaDAOImpl{
    + getFactura(): List<FacturaDTO>
    + insertFactura(FacturaDTO factura)
    + deleteFactura(FacturaDTO factura)
    + updateFactura(FacturaDTO factura)
    }

    class UsuarioDAOImpl{
    + getUsuario(): List<UsuarioDTO>
    + insertUsuario(UsuarioDTO usuario)
    + deleteUsuario(UsuarioDTO usuario)
    + updateUsuario(UsuarioDTO usuario)
    }

    class EspecialidadDAOImpl{
    + getEspecialidad(): List<EspecialidadDTO>
    + insertEspecialidad(EspecialidadDTO especialidad)
    + deleteEspecialidad(EspecialidadDTO especialidad)
    + updateEspecialidad(EspecialidadDTO especialidad)
    }

}

package ubp.doo.tp.Modelos{
    
    interface Modelo{
    }

    class MTurnos{
        - turno: TurnoDAO
    }

    class MCliente{
        - cliente: ClienteDAO
    }

    class MVehiculo{
        - vehiculo: VehiculoDAO
    }

    class MMaterial{
        - material: MaterialDAO
    }

    class MFicha{
        - ficha: FichaDao
    }

    class MMecánico{
        - mecánico: MecanicoDAO
    }

    class MAgenda{
        - agenda: AgendaDAO
    }

    class MDetalle{
        - detalle: DetalleDAO
    }

    class MCompañíaSeguros{
        - compañíaseguros: CompañíaSegurosDAO
    }

    class MFactura{
        - factura: FacturaDAO
    }

    class MUsuario{
        usuario: UsuarioDAO
    }

    class MEspecialidad{
        especialidad: EspecialidadDAO
    }
}
package ubp.doo.tp.Vistas{

    interface Vista{
        + setControlador(Controlador cont)
    }

    class VistaConsultaClientes{
        - List<ClienteDTO> clientes
        - JTable tablaClientes
        - JButton nuevo
        - JButton seleccionar 
        - JButton cancelar


        + getClientes() : List<ClienteDTO> clientes
        + setClientes(List<ClienteDTO> clientes)
        + actualizarVista(List<ClienteDTO> clientes)
    }

    class VistaConfirmarTurnos{
        - JTable tablaTurnos
        - JButton confirmar
        - JButton cancelarTurno
        - JButton cancelarAccion
        - JLabel confAsist

        + getTurnos() : List<TurnosDTO> turnos
        + setTurnos(List<TurnosDTO> turnos)
        + actualizarVista(List<TurnosDTO> turnos)
    }

    class VistaRegistrarClientes{
        - JButton siguiente
        - JButton cancelar
        - JLabel labelnombre
        - JLabel labelapellido
        - JLabel labeldni
        - JLabel labeltipo
        - JTextField textnombre
        - JTextField textapellido
        - JTextField textdni
        - JComboBox comboboxtipo

        + actualizarVista()
    }

    class VistaRegistrarVehiculos{
        - JButton registrar
        - JButton cancelar
        - JLabel labelmatricula
        - JLabel labelnropoliza
        - JLabel labelmodelo
        - JLabel labelmarca
        - JLabel labelcompseg
        - JTextField textmatricula
        - JTextField textnropoliza
        - JTextField textmodelo
        - JComboBox comboboxcompseg
        - JComboBox comboboxmarca

        + actualizarVista()
    }

    class VistaRegistrarTurnos{
        - JButton registrar
        - JButton cancelar
        - JButton examinar
        - JButton nuevo
        - JButton calendario
        - JLabel labelcliente
        - JLabel labelvehiculo
        - JLabel labelespecialidad
        - JLabel labelfecha
        - JLabel labelmecanico
        - JTextField textcliente
        - JTextField textfecha
        - JComboBox comboboxvehiculo
        - JComboBox comboboxmecanico

        + actualizarVista()
    }

    class VistaCrearFichas{
        - JButton examinar
        - JButton anadirmat
        - JTextField textturno
        - JList listactividades
        - JTable materiales

        + actualizarVista()
    }

    class VistaSeleccionarMateriales{
        - JTable tablaMateriales
        - JButton confirmar
        - JButton cancelarAccion
        - JLabel selecMat

        + getMateriales() : List<MaterialesDTO> materiales
        + setMateriales(List<MaterialesDTO> materiales)
        + actualizarVista(List<MaterialesDTO> materiales)
    }


    class VistaConstanciaConformidad{
        - JLabel Cliente
        - JTextField textcliente
        - JLabel Conformidad
        - JRadioButton Conforme 
        - JRadioButton NoConforme
        - JTextArea Motivo
        - JButton Aceptar
        - JButton cancelar

        + actualizarVista() 
        
    }

    class VistaMenuRecepcion{
        - JButton enviarListado
        - JButton registrarTurno
        - JButton consultarTurno
        - JButton Cerrar

        + actualizarVista()
    }

    class VistaMenuTaller{
        - JButton registrarFicha
        - JButton generarConstancia
        - JButton Cerrar
        
        + actualizarVista()
    }
    
    class VistaMenuAdministracion{
        - JButton crearInforme
        - JButton modificarInforme
        - JButton enviarInforme
        - JButton Cerrar
        
        + actualizarVista()
    }

    class VistaSysAdmin{
        - JButton crearUsuario
        - JButton EliminarUsuario
        - JButton Cerrrar

        + actualizarVista()
    }

    class VistaRegistrarUsuario{
        - JLabel lnombre
        - JTextField textNombre
        - JLabel lapellido 
        - JLabel textApellido
        - JLabel lDNI 
        - JTextField textdni
        - JLabel lTipo 
        - JComboBox comboboxtipo
        - JLabel lEspecialidad 
        - JComboBox comboboxespecialidad
        - JLabel lUsername
        - JTextField textUser
        - JLabel lPassword
        - JTextField textpass
        - JButton registrar
        - JButton cancelar

        + actualizarVista()

    }

    class VistaEliminarUsuario{
        - JTable tablaUsuarios
        - JButton Eliminar 
        - JButton cancelarAccion
        - JLabel selecionarUsuario

        + getUsuarios() : List<UsuariosDTO> usuarios
        + setMateriales(List<UsuariosDTO> usuarios)
        + actualizarVista (List<UsuariosDTO> usuarios)
    }

    class VistaLogin{
        - JLabel lUsuario
        - JTextField textUser
        - JLabel lPassword
        - JTextField textpass
        - JButton Ingresar

        + actualizarVista()
    }

}

package ubp.doo.tp.Controladores{

    interface Controlador{
        + eventListener()
    }

    class ControladorFlujoTurno{
        - modeloCliente: Modelo
        - modeloVehiculo: Modelo
        - modeloCompañíaSeguros: Modelo
        - modeloAgenda: Modelo
        - modeloTurnos: Modelo
        - modeloMecanico: Modelo
        - modeloEspecialidad: Modelo
        - vistaActual1: Vista
        - vistaActual2: Vista 


        + ControladorFlujoTurno(Modelo modelocliente, modelovehiculo, modeloespecialidad, Vista vista)
        + getClientes(): List<ClienteDTO>
        + addCliente(ClienteDTO cliente)
        + filterClientes(string params) : List<ClienteDTO>
    }

    class ControladorFichas{
        - modeloAgenda: Modelo
        - modeloTurnos: Modelo
        - modeloMecanico: Modelo
        - modeloFichas: Modelo
        - modeloCliente: Modelo
        - modeloVehiculo: Modelo
        - modeloCompañíaSeguros: Modelo
        - modeloMateriales: Modelo
        - modeloDetalle: Modelo
        - modeloEspecialidad: Modelo
        - vistaActual: Vista

        + ControladorFichas(Modelo modeloturnos, modeloagenda, modelomecanico, modelofichas, modelocliente,
            modelovehículo, modelocompseg, modelomateriales, modelodetalle, modeloespecialidad, Vista vista)
    }

    class ControladorTurnos{
        - modeloCliente: Modelo
        - modeloVehiculo: Modelo
        - modeloCompañíaSeguros: Modelo
        - modeloTurnos: Modelo
        - modeloEspecialidad: Modelo
        - vistaActual: Vista

        + ControladorTurnos(Modelo modeloturnos, modelovehiculo, modelocompseg, modelocliente, modeloespecialidad, Vista vista)
    }

    



}

package ubp.doo.tp.DTO{
    
    class CompañíaSegurosDTO {
        - nombre: String
        
        + CompañíaSegurosDTO(String)
        + setNombre(String)
        + getNombre(): String
    }

    class TurnoDTO{
        - cliente: ClienteDTO
        - vehiculo: VehiculoDTO
        - fecha: Date
        - hora: int
        - estado: bool
        - asistencia: int

        + TurnoDTO(Date fecha,int hora)
        + setCliente(ClienteDTO)
        + setVehiculo(VehiculoDTO)
        + setEstado(bool)
        + setAsistencia(int)
        + getFecha(): Date
        + getHora(): int
        + getEstado(): bool
        + getAsistencia(): int
        + getCliente(): ClienteDTO
        + getVehiculo(): VehiculoDTO
    }
note right of TurnoDTO : El atributo estado indica turno libre u ocupado

    class DetalleDTO{
        - material: Material
        - cantidad: int

        + DetalleDTO(Material material, int cantidad)
        + getSubtotal(): int
        + getMaterial(): Material
        + getCantidad(): int
    }

    class AgendaDTO{
        - horaInicio: int
        - horaFin: int
        - turnos: List<Turno>

        + AgendaDTO()
        + Inicializar()
        + setHoraI(int)
        + setHoraF(int)
        + getTurnos(): List<Turno>
        + getRangoHorario(): int, int
        + agendarTurno(Turno turno)
        + registrarAsistencia(Turno turno)
    }

    class MecánicoDTO{
        - especialidad: EspecialidadDTO
        - costoHora: float
        - agenda: AgendaDTO

        + MecánicoDTO(String nombre, String apellido, 
            String dniTipo, int dniNum, String, rol, Float salario)
        + setEspecialidad(String especialidad)
        + setCosto(float costoHora)
        + inicializarAgenda()
        + getAgenda(): AgendaDTO
        + getCosto(): float
        + getEspecialidad(): String
    }

    class MaterialDTO{
        - nombre: String
        - tipo: String
        - precio: float
        - medida: String

        + MaterialDTO(String nombre, float precio, 
            String tipo, String medida)
        + setNombre(String nombre)
        + setPrecio(float precio)
        + getNombre(): String
        + getPrecio(): float
        + setMedida(String medida)
        + getMedida(): string
        + setTipo(String)
        + getTipo(): String
    }
note right of MaterialDTO : Esta clase se utiliza tanto para insumos y repuestos

    class FacturaDTO{
        - NCseguro: CompañíaSegurosDTO
        - listaServicios: List<String>
        - costoTotal: float
        - pagoRealizado: float

        + Factura(CompañíaSegurosDTO NCseguro, List<String> listaServicios, 
                float costoTotal, float pagoRealizado)
        + getNCseguro() : CompañíaSegurosDTO
        + getServicios(): List<string>
        + getCostoTotal() : float
        + getPagoRealizado() : float
        + setListaServicios(List<String> listaServicios)
        + setDeuda(float costoTotal, float pagoRealizado)
    }

    class FichaDTO{
        - listaDetalles: List<Detalle>
        - listaActividades: List<String>
        - turno: Turno
        - conformidad: bool
        - motConformidad: String
        - etapa: String

        + FichaDTO(List<Detalle> listaDetalles, List<String> listaActividades, 
                Turno turno, Cliente cliente, VehiculoDTO vehiculo, bool conformidad,String motConformidad)
        + getListaDetalles(): List<Detalles>
        + getListaActividades(): List<String>
        + getTurno(): Turno
        + getConformidad(): bool
        + getMotivos(): String

        + addDetalle(Detalle detalle)
        + setListaActividades(List<String> listaActividades)
        + addActividad(String actividad)
        + setConformidad(bool Conformidad, String motConformidad)
        + setEtapa(String etapa)
    }
note left of FichaDTO : motConformidad hace referencia al motivo de la no conformidad del cliente con el servicio

    class VehiculoDTO{
        - seguro: CompañíaSegurosDTO
        - NPoliza: int
        - marca: String
        - modelo: String
        - matricula: String

        + VehiculoDTO(CompañíaSegurosDTO seguro, int NPoliza, String marca,
                String modelo, String matricula)
        + getNPoliza(): int
        + getMarca(): String
        + getModelo(): String
        + getMatricula(): String
        + setDatos(CompañíaSegurosDTO seguro, String marca,
                String modelo, String matricula)  
    }

    class ClienteDTO{
        - listaVehiculos: List<VehiculoDTO>

        + Cliente(String nombre, String apellido, 
            String dniTipo, int dniNum, List<VehiculoDTO> listaVehiculos)
        + getListaVehiculos(): Lista<VehiculoDTO>
        + agregarVehiculo(VehiculoDTO vehiculo)
        + getVehiculo(String matricula): VehiculoDTO
    }


    class UsuarioDTO{
        - nombre: String
        - apellido: String
        - especialidad: String
        - username: String
        - password: String

        + UsuarioDTO(String nombre, String apellido, 
            String especialidad, String username,
            String password)
        + setNombre(String nombre)
        + setApellido(float apellido)
        + getNombre(): String
        + getApellido(): String
        + setEspecialidad(String especialidad)
        + getEspecialidad(): string
        + setUsername(String username)
        + getUsername(): String
        + setPassword(String password)
        + getPassword(): String 
    }

    class EspecialidadDTO{
        - nombre: String
        + getEspecialidad() : String
    }

}




package ubp.doo.tp.Utils{

    class Persona{
        # nombre: String
        # apellido: String
        # dniTipo: String
        # dniNumero: int

        + Persona()
        + Persona(String nombre, String apellido, 
            String dniTipo, int dniNum)
        + getNombre(): String
        + getApellido(): String
        + getDNITipo(): String
        + getDNINum(): int
        + setNombreCompleto(String nombre, String apellido)
        + setDNI(String tipo, int numero)
    }

    class Empleado{
        - rol: String
        - salario: float

        + Empleado(String nombre, String apellido, 
            String dniTipo, int dniNum, String, rol, Float salario)
        + getRol(): String
        + getSalario(): float
        + setDatosEmp(String rol, float Salario)
    }
}

package ubp.doo.tp.Facade{
    interface Facade{
    }

    class FacadeInitOpciones{

        + FacadeInitOpciones()
        + ejecutarOpcion(string opcion)  
    }
}

package ubp.doo.tp.Main{
    class Main{
        +Main()
    }
}

Main ..> FacadeInitOpciones : <<importa>>

Facade <|- FacadeInitOpciones

FacadeInitOpciones ..> MVCFactory : <<usa>>

Empleado --|> Persona
ClienteDTO --|> Persona
MecánicoDTO --|> Empleado
MecánicoDTO "0-n" --> "1" EspecialidadDTO
ClienteDTO "1" <-up- "0-n" TurnoDTO
MaterialDTO "1" -up-> "0-n" DetalleDTO
TurnoDTO "1-n" <-up- "1" AgendaDTO
AgendaDTO "1" <-up- "1" MecánicoDTO
DetalleDTO "1-n" *-up- "1" FichaDTO
MecánicoDTO "1" <-up- "1" FichaDTO
TurnoDTO "1" <-up- "1" FichaDTO
CompañíaSegurosDTO "1" <-up- "0-n" VehiculoDTO
CompañíaSegurosDTO "1" <-up- "0-n" FacturaDTO
VehiculoDTO "0-n" <-up- "1" ClienteDTO

SqlFabricaDAO --|> FabricaDAO

MCliente <- ControladorFlujoTurno
MVehiculo <- ControladorFlujoTurno
MCompañíaSeguros <- ControladorFlujoTurno
MAgenda <- ControladorFlujoTurno
MTurnos <- ControladorFlujoTurno  
MMecánico <- ControladorFlujoTurno
MEspecialidad <- ControladorFlujoTurno

MCliente <- ControladorFichas
MVehiculo <- ControladorFichas
MCompañíaSeguros <- ControladorFichas
MAgenda <- ControladorFichas
MTurnos <- ControladorFichas  
MMecánico <- ControladorFichas
MMaterial <- ControladorFichas
MDetalle <- ControladorFichas 
MEspecialidad <- ControladorFichas

MCliente <- ControladorTurnos
MVehiculo <- ControladorTurnos
MCompañíaSeguros <- ControladorTurnos
MTurnos <- ControladorTurnos  
MEspecialidad <- ControladorTurnos  

ControladorFichas --|> Controlador 
ControladorFlujoTurno --|> Controlador
ControladorTurnos --|> Controlador

MCliente --|> Modelo
MCliente -> ClientesDAOImpl
ClientesDAOImpl --|> ClientesDAO
ClientesDAO <.. SqlFabricaDAO
ClienteDTO <.. ClientesDAOImpl 

MTurnos --|> Modelo
MTurnos --> TurnosDAOImpl
TurnosDAOImpl --|> TurnosDAO
TurnosDAO <.. SqlFabricaDAO
TurnoDTO <.. TurnosDAOImpl 

MVehiculo --|> Modelo
MVehiculo --> VehiculoDAOImpl
VehiculoDAOImpl --|> VehiculoDAO
VehiculoDAO <.. SqlFabricaDAO
VehiculoDTO <.. VehiculoDAOImpl 

MMaterial --|> Modelo
MMaterial --> MaterialDAOImpl
MaterialDAOImpl --|> MaterialDAO
MaterialDAO <.. SqlFabricaDAO
MaterialDTO <.. MaterialDAOImpl 

MMecánico --|> Modelo
MMecánico --> MecánicoDAOImpl
MecánicoDAOImpl --|> MecánicoDAO
MecánicoDAO <.. SqlFabricaDAO
MecánicoDTO <.. MecánicoDAOImpl 

MFicha --|> Modelo
MFicha --> FichaDAOImpl
FichaDAOImpl --|> FichaDAO
FichaDAO <.. SqlFabricaDAO
FichaDTO <.. FichaDAOImpl 

MAgenda --|> Modelo
MAgenda --> AgendaDAOImpl
AgendaDAOImpl --|> AgendaDAO
AgendaDAO <.. SqlFabricaDAO
AgendaDTO <.. AgendaDAOImpl 

MFactura --|> Modelo
MFactura --> FacturaDAOImpl
FacturaDAOImpl --|> FacturaDAO
FacturaDAO <.. SqlFabricaDAO
FacturaDTO <.. FacturaDAOImpl 

MDetalle --|> Modelo
MDetalle --> DetalleDAOImpl
DetalleDAOImpl --|> DetalleDAO
DetalleDAO <.. SqlFabricaDAO
DetalleDTO <.. DetalleDAOImpl 

MCompañíaSeguros --|> Modelo
MCompañíaSeguros --> CompañíaSegurosDAOImpl
CompañíaSegurosDAOImpl --|> CompañíaSegurosDAO
CompañíaSegurosDAO <.. SqlFabricaDAO
CompañíaSegurosDTO <.. CompañíaSegurosDAOImpl 

MUsuario --|> Modelo
MUsuario --> UsuarioDAOImpl
UsuarioDAOImpl --|> UsuarioDAO
UsuarioDAO <.. SqlFabricaDAO
UsuarioDTO <.. UsuarioDAOImpl

MEspecialidad --|> Modelo
MEspecialidad --> EspecialidadDAOImpl
EspecialidadDAOImpl --|> EspecialidadDAO
EspecialidadDAO <.. SqlFabricaDAO
EspecialidadDTO <.. EspecialidadDAOImpl


MVCFactory <|-down- MVCFactoryConsultarClientes
MVCFactory <|-down- MVCFactoryConfirmarTurnos
MVCFactory <|-down- MVCFactoryRegistrarClientes
MVCFactory <|-down- MVCFactoryRegistrarVehiculos
MVCFactory <|-down- MVCFactoryRegistrarTurnos
MVCFactory <|-down- MVCFactoryCrearFichas
MVCFactory <|-down- MVCFactorySeleccionarMateriales
MVCFactory <|-down- MVCFactoryCrearUsuario
MVCFactory <|-down- MVCFactoryEliminarUsuario

MVCFactoryConsultarClientes <.. MCliente
MVCFactoryConsultarClientes <.. MVehiculo
MVCFactoryConsultarClientes <.. MCompañíaSeguros 
MVCFactoryConsultarClientes <.. MMecánico
MVCFactoryConsultarClientes <.. MAgenda
MVCFactoryConsultarClientes <.. MTurnos
MVCFactoryConsultarClientes <.. MEspecialidad

MVCFactoryRegistrarClientes <.. MCliente
MVCFactoryRegistrarClientes <.. MVehiculo
MVCFactoryRegistrarClientes <.. MCompañíaSeguros
MVCFactoryRegistrarClientes <.. MMecánico
MVCFactoryRegistrarClientes <.. MAgenda
MVCFactoryRegistrarClientes <.. MTurnos
MVCFactoryRegistrarClientes <.. MEspecialidad

MVCFactoryRegistrarVehiculos <.. MCliente
MVCFactoryRegistrarVehiculos <.. MVehiculo
MVCFactoryRegistrarVehiculos <.. MCompañíaSeguros
MVCFactoryRegistrarVehiculos <.. MMecánico
MVCFactoryRegistrarVehiculos <.. MAgenda
MVCFactoryRegistrarVehiculos <.. MTurnos
MVCFactoryRegistrarVehiculos<.. MEspecialidad

MVCFactoryRegistrarTurnos <.. MCliente
MVCFactoryRegistrarTurnos <.. MVehiculo
MVCFactoryRegistrarTurnos <.. MCompañíaSeguros
MVCFactoryRegistrarTurnos <.. MMecánico
MVCFactoryRegistrarTurnos <.. MAgenda
MVCFactoryRegistrarTurnos <.. MTurnos
MVCFactoryRegistrarTurnos<.. MEspecialidad

MVCFactoryCrearFichas <.. MCliente
MVCFactoryCrearFichas <.. MVehiculo
MVCFactoryCrearFichas <.. MCompañíaSeguros
MVCFactoryCrearFichas <.. MMecánico
MVCFactoryCrearFichas <.. MAgenda
MVCFactoryCrearFichas <.. MTurnos
MVCFactoryCrearFichas <.. MEspecialidad
MVCFactoryCrearFichas <.. MMaterial
MVCFactoryCrearFichas <.. MDetalle
MVCFactoryCrearFichas <.. MFicha

MVCFactorySeleccionarMateriales <.. MCliente
MVCFactorySeleccionarMateriales <.. MVehiculo
MVCFactorySeleccionarMateriales <.. MCompañíaSeguros
MVCFactorySeleccionarMateriales <.. MMecánico
MVCFactorySeleccionarMateriales <.. MAgenda
MVCFactorySeleccionarMateriales <.. MTurnos
MVCFactorySeleccionarMateriales <.. MEspecialidad
MVCFactorySeleccionarMateriales <.. MMaterial
MVCFactorySeleccionarMateriales <.. MDetalle
MVCFactorySeleccionarMateriales <.. MFicha

MVCFactoryConfirmarTurnos <.. MCliente
MVCFactoryConfirmarTurnos <.. MVehiculo
MVCFactoryConfirmarTurnos <.. MCompañíaSeguros
MVCFactoryConfirmarTurnos <.. MMecánico
MVCFactoryConfirmarTurnos <.. MAgenda
MVCFactoryConfirmarTurnos <.. MTurnos
MVCFactoryConfirmarTurnos <.. MEspecialidad


MVCFactoryConsultarClientes <.down. VistaConsultaClientes  
MVCFactoryConfirmarTurnos <.down. VistaConfirmarTurnos 
MVCFactoryRegistrarVehiculos <.down. VistaRegistrarVehiculos 
MVCFactoryRegistrarTurnos <.down.. VistaRegistrarTurnos 
MVCFactoryRegistrarClientes <.down. VistaRegistrarClientes 
MVCFactoryCrearFichas <.down. VistaCrearFichas  
MVCFactorySeleccionarMateriales <.down. VistaSeleccionarMateriales 

MVCFactoryConsultarClientes <.. ControladorFlujoTurno
MVCFactoryRegistrarClientes <.. ControladorFlujoTurno
MVCFactoryRegistrarVehiculos <.. ControladorFlujoTurno
MVCFactoryRegistrarTurnos <.. ControladorFlujoTurno

MVCFactoryCrearFichas <.. ControladorFichas 
MVCFactorySeleccionarMateriales <.. ControladorFichas

MVCFactoryConfirmarTurnos <.. ControladorTurnos

VistaConsultaClientes <-- ControladorFlujoTurno
VistaRegistrarClientes <-- ControladorFlujoTurno
VistaRegistrarVehiculos <-- ControladorFlujoTurno
VistaRegistrarTurnos <-- ControladorFlujoTurno

VistaConfirmarTurnos <-- ControladorTurnos

VistaCrearFichas <-- ControladorFichas 
VistaSeleccionarMateriales <-- ControladorFichas

VistaConfirmarTurnos -down-|> Vista
VistaRegistrarVehiculos -down-|> Vista
VistaRegistrarTurnos -down-|> Vista
VistaRegistrarClientes -down-|> Vista
VistaCrearFichas -down-|> Vista
VistaSeleccionarMateriales -down-|> Vista
VistaConsultaClientes -down-|> Vista
VistaConstanciaConformidad -down-|> Vista
VistaMenuRecepcion -down-|> Vista
VistaMenuTaller -down-> Vista 
VistaMenuAdministracion -down-|> Vista
VistaRegistrarUsuario -down-|> Vista
VistaEliminarUsuario -down-|> Vista 
VistaLogin -down-|> Vista

@enduml